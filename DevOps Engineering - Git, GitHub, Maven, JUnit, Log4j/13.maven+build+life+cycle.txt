Maven Build Life Cycle:
---------------------------------
* Maven is based around the central concept of a build life cycle.it means the process for building and
  distributing artifact(project) is clearly defined

* There are 3 built in build life cycle 
  1)clean [3 phases]    : It handles project cleaning
  2)default [23 phases] : It handled project depolyment
  3)site [4 phases]     : It handles creation of Our Project Site Documentation

Note : Each lifecycle of a maven will have lots of phases.These phases already linked with plugins to
perform certain operations

Clean Life Cycle :
-----------------------------------------------
Phase		  Description
------------------------------------------
1)pre-clean  : Execute processes needed prior to actual project cleaning
* 2)clean      : Removes all files generated by previous build
3)post-clean : execute processes those are needed to finalize project cleaning


Default Life Cycle :
--------------------------------------------------
Phase		 Description
--------------------------------------------------
1)validate           : Validate the project is correct and all necessary information is available
2)initialize         : To initialize build state
3)generate-sources   : Generate any source code for inclusion in compilation
4)process-sources    : Process source code
5)generate-resources : generate resources for inclusion in package
6)process-resources  : Copy and process the resources into destination directory ,ready for execution
* 7)compile            : Compile the source code of tha project
8)process-classes    : Post process generated files from compilation
9)generate-test-sources : generate any test source doe  for inclusion in compilation
10)process-test-sources : Process test source code
11)generate-test-resources : Create resources for testing
12)process-test-resources : copy and process resources into test destination directory
13)test-compile  :compile test source code into test destination directory
14)process-test-classes : post process generated files from test compilation
* 15)test : run tests using suitable unit testing framework
16)prepare-package :  perform any necessary operations to prepeare before actual packaging
* 17)package : Take the compiled code and package it in its distributable format such as jar
18)pre-integration-test : perform actions required before integration tests are executed
19)integration-test : process and deploy the pavkage if necessary into an environment where integration
                      test can run
20)post-integration-test : perform actions required after integration tests have been executed
* 21)verify  : run any checks to verify the package is valid and meets quality criteria
* 22)install : install the package into local repository ,for use as dependency in other projects locally
* 23)deploy  : done in an integratio or release environment ,copies the final package to the remote
             repository for sharing with other developers and projects

========================================================================================================

3)site Lifecycle [4 phases]:
--------------------------------------------
phase               Description:
--------------------------------------
1)pre-site        execute processes needed prior to actual project site generation
* 2)site            generate project site generation
3)post-site       execute processes needed to finalize site generation and to prepare for site deployment
4)site-deploy     deploy the generated site documentation to the specified web server

